#!/bin/bash
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

doDownload () {
  sURL="$DOWNLOAD_MONSTER_URL"
  echo "using document : $DOWNLOAD_MONSTER_URL"
  echo downloading data...
  curl -L --max-redir 5 "$sURL" --output "$SCRIPT_DIR/monsters.csv"
}

doPrepareFolder () {
  mkdir -p "$SCRIPT_DIR"/generated-blueprints
  sEmptyDir=$(ls -A "$SCRIPT_DIR"/generated-blueprints)
  if [ -n "$sEmptyDir" ]
  then
    echo removing previous blueprints...
    rm -r "$SCRIPT_DIR"/generated-blueprints/*.json
  fi
}

doGenerateBlueprints () {
  echo generating blueprints...
  node "$SCRIPT_DIR/generate-monster-blueprints.js"
}

doTransferBlueprints () {
  echo copying blueprint...
  cp "$SCRIPT_DIR"/generated-blueprints/*.json "$SCRIPT_DIR"/../src/modules/classic/blueprints/creatures/monsters
}

printHelp () {
  echo usage: $(basename "$0") [-d] [-h]
  echo " -d : prevent downloading CSV data."
  echo "hint: Don't forget to create your .env file (see .env.dist for syntax)."
}

if [ -f "$SCRIPT_DIR/../.env" ]
then
  source "$SCRIPT_DIR/../.env"
  bDoDownload=1
  while getopts 'dh' opt
  do
    case "$opt" in
      d)
        # no download
        bDoDownload=0
        ;;
      h|?)
        printHelp
        exit 1
        ;;
    esac
  done
  shift "$((OPTIND -1))"
  if [ $bDoDownload -eq 1 ]
  then
    doDownload
  fi
  doPrepareFolder
  doGenerateBlueprints
  doTransferBlueprints
  echo done.
else
  echo ".env file not found in project root dir."
  echo "Please create an .env file with a 'DOWNLOAD_MONSTER_URL=\"...\"' variable referencing an online csv document containing monster data."
  echo "(URL should be inside double quotes because characters like '&' or ';' will mess with shell in commands where this variable is used)"
fi
